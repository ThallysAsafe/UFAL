# Listas:
# Adicionar Elementos:
# append(item): Adiciona um item ao final da lista.
# insert(index, item): Insere um item em uma posição específica da lista.

# Remover Elementos:
# remove(item): Remove a primeira ocorrência do item na lista.
# pop(index): Remove e retorna o item na posição especificada.
# clear(): Remove todos os itens da lista.

# Acessar Elementos:
# index(item): Retorna o índice da primeira ocorrência do item.
# count(item): Conta quantas vezes o item aparece na lista.

# Ordenação e Reversão:
# sort(): Ordena a lista em ordem crescente.
# reverse(): Inverte a ordem dos elementos na lista.

# Outros Métodos Úteis:
# len(lista): Retorna o número de elementos na lista.
# copy(): Cria uma cópia rasa da lista.
# extend(iterable): Adiciona elementos de outro iterável à lista.


# Conjuntos:

# Adicionar e Remover Elementos:
# add(item): Adiciona um item ao conjunto.
# remove(item): Remove um item específico do conjunto (lança um erro se o item não existir).
# discard(item): Remove um item específico do conjunto (não lança erro se o item não existir).
# pop(): Remove e retorna um elemento aleatório do conjunto.

# Operações de Conjunto:
# union(other_set): Retorna a união de dois conjuntos.
# intersection(other_set): Retorna a interseção de dois conjuntos.
# difference(other_set): Retorna a diferença entre dois conjuntos.

# Verificação de Pertencimento:
# in: Verifique se um item está presente no conjunto.
# Dicionários (baseados em hash):

# Inserir, Atualizar e Acessar Elementos:
# dict[key] = value: Insere ou atualiza um par chave-valor no dicionário.
# get(key, default): Retorna o valor associado a uma chave ou um valor padrão se a chave não existir.
# keys(): Retorna uma lista de todas as chaves no dicionário.
# values(): Retorna uma lista de todos os valores no dicionário.

# Remover Elementos:
# pop(key): Remove um par chave-valor e retorna o valor associado à chave especificada.
# popitem(): Remove e retorna um par chave-valor aleatório.
# clear(): Remove todos os pares chave-valor do dicionário.

# Tuplas:
# As tuplas são imutáveis, o que significa que não têm muitos métodos de modificação. Elas oferecem principalmente métodos para consulta e operações básicas de indexação, como index() e count().